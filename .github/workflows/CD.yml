name: Build and Deploy Next.js

on:
  push:
    branches:
      - main

jobs:
  semantic-release:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    name: Build and Deploy Next.js
    runs-on: ubuntu-latest
    permissions:
        contents: write
        issues: write
        pull-requests: write
        packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install dependencies
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        with:
          semantic_version: 24.2.3
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/changelog
            @semantic-release/github
            @semantic-release/git
            @semantic-release/exec
            conventional-changelog-conventionalcommits@8
          branches: |
            [
              'main',
              {
                name: 'alpha',
                prerelease: true
              },
              {
                name: 'beta',
                prerelease: true
              }
            ]
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Details
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }}
          echo ${{ steps.semantic.outputs.new_release_major_version }}
          echo ${{ steps.semantic.outputs.new_release_minor_version }}
          echo ${{ steps.semantic.outputs.new_release_patch_version }}

      - name: Set up Docker Buildx
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        if: steps.semantic.outputs.new_release_published == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ steps.semantic.outputs.new_release_version }}

      - name: Build and push Docker image to GCR
        if: steps.semantic.outputs.new_release_published == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          target: production
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Coolify
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          curl -X POST "${{ secrets.COOLIFY_WEBHOOK_URL }}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.COOLIFY_API_TOKEN }}"
